<UserControl x:Class="Wait.Views.WaitUcView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Wait.Views"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes" 
             xmlns:viewmodels="clr-namespace:Wait.ViewModels" d:DataContext="{d:DesignInstance Type=viewmodels:WaitUcViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <!-- 仅在设计时加载资源 -->
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Wait;component/Md.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <md:DialogHost>
        <md:DrawerHost IsRightDrawerOpen="{Binding IsShowRightDialog, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <md:DrawerHost.RightDrawerContent>
                <DockPanel Width="300" LastChildFill="False">
                    <TextBlock Text="添加待办" FontWeight="Bold" FontSize="20" Margin="20 10" DockPanel.Dock="Top"></TextBlock>
                    <StackPanel Margin="20" DockPanel.Dock="Top" Orientation="Horizontal">
                        <TextBlock Text="状态" VerticalAlignment="Center" ></TextBlock>
                        <ComboBox Margin="10 0" SelectedIndex="{Binding Wait.Status}">
                            <ComboBoxItem Content="未完成" />
                            <ComboBoxItem Content="已完成" />
                        </ComboBox>
                    </StackPanel>

                    <TextBox md:HintAssist.Hint="Title" Margin="20 0" DockPanel.Dock="Top" Text="{Binding Wait.Title ,Mode=OneWayToSource,UpdateSourceTrigger=PropertyChanged}"></TextBox>
                    <TextBox md:HintAssist.Hint="Content" DockPanel.Dock="Top" MinHeight="100" Text="{Binding Wait.Content, Mode=OneWayToSource,UpdateSourceTrigger=PropertyChanged}" TextWrapping="WrapWithOverflow"></TextBox>
                    <Button Content="添加到待办" Command="{Binding AddWaitCommand}" DockPanel.Dock="Top"></Button>
                </DockPanel>
            </md:DrawerHost.RightDrawerContent>
            <md:DrawerHost>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>
                    <!--第一行-->
                    <StackPanel Orientation="Horizontal" Grid.Row="0">
                        <TextBox Margin="10 5" md:HintAssist.Hint="查找代办事项" md:TextFieldAssist.HasClearButton="True" Text="{Binding SearchWaitTitle,UpdateSourceTrigger=PropertyChanged}">
                            <TextBox.InputBindings>
                                <KeyBinding Key="Enter" Command="{Binding UpDateWaitListCommand}"></KeyBinding>
                            </TextBox.InputBindings>
                        </TextBox>
                        <ComboBox Text="1！筛选" Margin="10 0" SelectedIndex="{Binding Status}" >
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <i:InvokeCommandAction Command="{Binding UpDateWaitListCommand}"></i:InvokeCommandAction>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <ComboBoxItem Content="全部" />
                            <ComboBoxItem Content="已完成" />
                            <ComboBoxItem Content="未完成" />
                        </ComboBox>
                    </StackPanel>
                    <Button Content="+添加代办" HorizontalAlignment="Right" Margin="10 0" Command="{Binding ShowRightDialogCommand}"></Button>
                    <!--第二行-->
                    <StackPanel Grid.Row="1" VerticalAlignment="Center" Visibility="{Binding Visibility}">
                        <TextBlock Text="未发现对应待办事项，您可以尝试添加新的待办事项" HorizontalAlignment="Center" FontSize="36" Foreground="White"></TextBlock>
                    </StackPanel>
                    <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                        <ItemsControl ItemsSource="{Binding WaitInfoList}" Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=ScrollViewer}}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel></WrapPanel>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <md:TransitioningContent OpeningEffect="{md:TransitionEffect Kind=ExpandIn}">
                                        <Border  Margin="10" CornerRadius="10" Style="{StaticResource EndControl }">
                                            <Grid Height="220" Width="180" MaxWidth="250" Margin="3">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="auto"></RowDefinition>
                                                    <RowDefinition></RowDefinition>
                                                </Grid.RowDefinitions>
                                                <md:PopupBox HorizontalAlignment="Right" Panel.ZIndex="1">
                                                    <Button Command="{Binding DataContext.DeleteWaitCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}" CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Self}}">删除</Button>
                                                </md:PopupBox>
                                                <TextBlock Text="{Binding Title}" Margin="10 5" FontWeight="Bold"></TextBlock>
                                                <TextBlock Text="{Binding Content}" Grid.Row="1" Margin="10 5"></TextBlock>
                                                <Canvas ClipToBounds="True" Grid.RowSpan="2">
                                                    <Border Canvas.Top="10" Canvas.Right="-50" Height="120" Width="120" Background="#ffffff" CornerRadius="100" Opacity="0.1"/>
                                                    <Border Canvas.Top="80" Canvas.Right="-30" Height="120" Width="120" Background="#ffffff" CornerRadius="100" Opacity="0.1"/>
                                                </Canvas>
                                            </Grid>
                                        </Border>
                                    </md:TransitioningContent>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                </Grid>
            </md:DrawerHost>
        </md:DrawerHost>
    </md:DialogHost>
</UserControl>
